require 'net/http'

patterns = {
  duplicate: [
    { key: "x-forwarded-for", value: "1.1.1.1" },
    { key: "x-forwarded-for", value: "2.2.2.2" }
  ],
  under_score: [
    { key: "x-forwarded-for", value: "1.1.1.1" },
    { key: "x_forwarded-for", value: "2.2.2.2" }
  ],
  reverse_under_score: [
    { key: "x_forwarded-for", value: "1.1.1.1" },
    { key: "x-forwarded-for", value: "2.2.2.2" },
  ],
  upper_case: [
    { key: "x-forwarded-for", value: "1.1.1.1" },
    { key: "X-FORWARDED-FOR", value: "2.2.2.2" }
  ],
  reverse_upper_case: [
    { key: "x-forwarded-for", value: "1.1.1.1" },
    { key: "X-FORWARDED-FOR", value: "2.2.2.2" }
  ],
}

urls = {
  puma_before_fix_rack2: 'http://0.0.0.0:9000/',
  puma_before_fix_rack3: 'http://0.0.0.0:9001/',
  puma_after_fix_rack2: 'http://0.0.0.0:9002/',
  puma_after_fix_rack3: 'http://0.0.0.0:9003/',
  pitchfork_rack2: 'http://0.0.0.0:9010/',
  pitchfork_rack3: 'http://0.0.0.0:9011/',
  unicorn_rack2: 'http://0.0.0.0:9020/',
  unicorn_rack3: 'http://0.0.0.0:9021/',
  thin_rack2: 'http://0.0.0.0:9030/',
  falcon_rack3: 'http://0.0.0.0:9041/',
  nginx_unicorn_rack2: 'http://0.0.0.0:9100/unicorn',
  nginx_unicorn_rack2_underscore_on: 'http://0.0.0.0:9101/unicorn',
}

patterns.each do |pattern, header_values|

  puts "#### #{pattern}"
  puts "| 対象 | 結果 | "
  puts "| --- | --- |"

  urls.each do |target, url_str|
    url = URI.parse(url_str)
    req = Net::HTTP::Get.new(url.path)

    header_values.each do |hash|
      req[hash[:key]] = hash[:value]
    end

    res = Net::HTTP.start(url.host, url.port) { |http|
      http.request(req)
    }

    puts "| #{target} | #{res.body} |"
  end
  puts ""
end


